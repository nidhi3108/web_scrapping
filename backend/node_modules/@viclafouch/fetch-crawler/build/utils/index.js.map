{"version":3,"sources":["src/utils/index.js"],"names":["isUrl","string","regexp","test","relativePath","hrefAbsolute","currentLink","URL","href","error"],"mappings":";;;;;;;AAAA;;AAQO,MAAMA,KAAK,GAAGC,MAAM,IAAI;AAC7B,QAAMC,MAAM,GAAG,kFAAf;AACA,SAAOA,MAAM,CAACC,IAAP,CAAYF,MAAZ,CAAP;AACD,CAHM;AAKP;;;;;;;;;;;AAOO,MAAMG,YAAY,GAAG,CAACC,YAAD,EAAeC,WAAf,KAA+B;AACzD,MAAI;AACF,WAAO,IAAIC,QAAJ,CAAQF,YAAR,EAAsBC,WAAtB,EAAmCE,IAA1C;AACD,GAFD,CAEE,OAAOC,KAAP,EAAc;AACd,WAAO,IAAP;AACD;AACF,CANM","sourceRoot":"../..","sourcesContent":["import { URL } from 'url'\n\n/**\n * Loosely validate a URL `string`.\n *\n * @param {String} string\n * @return {Boolean}\n */\nexport const isUrl = string => {\n  const regexp = /^(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!-/]))?/\n  return regexp.test(string)\n}\n\n/**\n * Get relative link in general\n *\n * @param {String} hrefAbsolute\n * @param {String} currentLink\n * @return {String}\n */\nexport const relativePath = (hrefAbsolute, currentLink) => {\n  try {\n    return new URL(hrefAbsolute, currentLink).href\n  } catch (error) {\n    return null\n  }\n}\n"],"file":"index.js"}